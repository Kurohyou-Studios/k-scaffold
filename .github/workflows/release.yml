on:
  release:
    types: [published]
name: Release

jobs:
  version:
    name: Check version & tags
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Check tags
        env:
          TAG: ${{ github.event.release.tag_name }}
        run: |
          sudo apt-get install jq
          VERSION="$(cat package.json | jq -r '.["version"]')"
          if [ "$VERSION" != "$TAG" ]; then
            printf "ERROR: release tag $TAG is not equal to package version $VERSION\n"
            exit 1
          fi

  build:
    needs: version
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
          registry-url: "https://registry.npmjs.org"

      - name: Deploy package
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
