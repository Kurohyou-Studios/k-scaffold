import{_ as u,o as a,c as r,r as d,a as e,b as h,d as o,w as s,e as t,f}from"./index-6abcb625.js";const p={},_=e("span",{class:"fa-li"},[e("i",{class:"fa-solid fa-dice-d20"})],-1);function m(n,c){return a(),r("li",null,[_,d(n.$slots,"default")])}const l=u(p,[["render",m]]),y=e("h2",null,"Getting Started",-1),g=e("hr",null,null,-1),j=e("h3",null,"Create a K-scaffold Project",-1),k={class:"info"},w=e("h4",null,"Prerequisites",-1),b={class:"fa-ul"},v=e("a",{href:"https://nodejs.org/en/"},"Node.js",-1),x=f(`<p> The K-scaffold can be installed two ways. The easiest way is to use the <a href="https://github.com/Kurohyou-Studios/K-scaffold-initializer">K-scaffold Initializer</a>. Alternatively you can install it directly via npm for a custom project. </p><h4>Using the initializer</h4><p>Once you have node installed, you simply run the following command from within the directory you want to create your project in.</p><pre><code>npx @kurohyou/k-init@latest</code></pre><p> This will run the initializer from the version on NPM. It will ask you several questions about your project to setup your sheet.json and k.config.mjs files. </p><h4>Config File</h4><p> The first way to use the K-scaffold, and the method that is setup by the initializer, is to use a config file named k.config.mjs. The config file provides the command line K-scaffold builder with options on how to build your project. </p><pre><code>//k.config.mjs
export default {
  source:&#39;./source&#39;,
  destination:&#39;./build&#39;,
  testDestination:&#39;../__tests&#39;,
  pugOptions:{options}
};</code></pre><p> This exports your code options to the K-scaffold. Once this file is set up, all that&#39;s needed to compile your pug, js, and scss code into html and css for Roll20 is to simply run: </p><pre><code>k-build</code></pre>`,10),K=e("h4",null,"Custom Install",-1),T=e("p",null," Alternatively, you can directly install the scaffold and manually set up either a custom generation.js file or manually setup your k.config.mjs. ",-1),I=e("pre",null,[e("code",null,"npm i @kurohyou/k-scaffold")],-1),C={__name:"GettingStarted",setup(n){return(c,N)=>{const i=h("RouterLink");return a(),r("div",null,[y,g,j,e("aside",k,[w,e("ul",b,[o(l,null,{default:s(()=>[t("Experience with the command line.")]),_:1}),o(l,null,{default:s(()=>[t("Install "),v,t(" version 18.0+.")]),_:1})])]),x,e("p",null,[t("For more information, read about the "),o(i,{to:"/gen"},{default:s(()=>[t("build API")]),_:1})]),K,T,I,e("p",null,[t("Once the scaffold is installed, you can generate files with either a custom generator file using the "),o(i,{to:"/gen"},{default:s(()=>[t("build API")]),_:1}),t(" or a k.config.mjs file (see above).")])])}}};export{C as default};
